import time

from chess.pgn import FileExporter
from prometheus_client import Counter


class DefaultGameSaver:
    def __init__(self, prefix):
        self.name = f"{prefix}-{time.strftime('%Y-%m-%d-%H-%M-%S')}.pgn"

    def __call__(self, game):
        with open(self.name, "a") as f:
            exporter = FileExporter(f)
            game.accept(exporter)
            game_counter.inc()


def format_root_moves(root, board):
    if root.visit_count == 0:
        return None

    root_moves = [
        f"{board.san(key)}:{val.visit_count}"
        for key, val in root.children.items()
        if val.visit_count > 0
    ]

    return "q={:.3f}; p=[{}]".format(1.0 - root.value(), ", ".join(root_moves))


def create_node_with_comment(node, tree, best_move, board):
    new_node = node.add_main_variation(best_move)
    new_node.comment = format_root_moves(tree, board)

    if new_node.comment:
        pos_counter.inc()

    return new_node


pos_counter = Counter("positions_total", "Positions generated by selfplay")
game_counter = Counter("games_total", "Games played by selfplay")
